{"meta":{"title":"MangoBlog~芒果博客，欢迎访问!","subtitle":"副标题","description":"芒果博客，分享个人技术心得","author":"芒果","url":"fcl1999062158.github.io","root":"/fcl1999062158.github.io/"},"pages":[],"posts":[{"title":"腾讯云负载均衡（CLB）笔记","slug":"clb","date":"2020-09-04T07:43:26.235Z","updated":"2020-09-04T07:43:26.235Z","comments":true,"path":"2020/09/04/clb/","link":"","permalink":"fcl1999062158.github.io/2020/09/04/clb/","excerpt":"","text":"负载均衡概念：负载均衡（Cloud Load Balancer）是对多台云服务器进行流量分发的服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性，负载均衡只负责转发流量，不具备处理请求的能力。因此，您需要有处理用户请求的云服务器实例。 负载均衡服务通过设置虚拟服务地址（VIP），将位于同一地域的多台云服务器资源虚拟成一个高性能、高可用的应用服务池。根据应用指定的方式，将来自客户端的网络请求分发到云服务器池中。 负载均衡服务会检查云服务器池中云服务器实例的健康状态，自动隔离异常状态的实例，从而解决了云服务器的单点问题，同时提高了应用的整体服务能力。 负载均衡就是可以对多台云服务器进行流量分发的服务，它可以将高并发的流量平均的分发给每台服务器，防止只有一台服务器处理大量流量而产生负载，并且会检查服务器健康状态，并且隔离异常状态的实例。 组成： 负载均衡实例Cloud Load Balancer：用于流量分发。 虚拟服务地址VIP(virtual IP)：负载均衡向客户端提供服务的 IP 地址。 后端服务器Backend/Real Server：后端一组云服务器实例，用于实际处理请求。 VPC/基础网络：整体网络环境。 腾讯云创建首先创建一个负载均衡器，可以将同一地域下的多台服务器实例，通过VIP虚拟成一个应用服务池，VIP就是向服务端提供的IP地址。客户端向DNS请求域名解析，DNS返回客户端VIP地址，客户端再访问负载均衡服务器。 负载均衡分类两个大类： 公网负载均衡：根据使用流量付费，通过Internet从客户端获取请求，并向绑定监听器的后端服务器分发这些请求。 有固定IP 场景： 1.对公网提供服务的服务器集群需要提供统一入口，并将公网用户请求合理分配到服务器集群时； 2.要对服务器集群做故障容错和故障恢复时； 3.为不同运营商的用户提供就近接入，做网络提速时。 无固定IP（仅支持HTTP协议七层转发功能，不支持A记录和Cname绑定，用户只能向一个腾讯云提供的域名发送请求） 场景： 1.当用户需要大量域名时； 2.当对公网提供HTTP服务的是服务器集群，需要提供统一的入口，并将公网用户请求合理地分配到服务器集群时； 3.希望对HTTP服务器集群做故障容错和故障恢复时； 4.公司内部的A系统到B系统之间的跳转，企业内部的局域网业务等； 5.为不同运营商的用户提供就近接入，做网络提速时。 内网负载均衡：免费，只能在腾讯云内部访问，不能通过Internet访问（没有公网IP或公网域名） 公网负载均衡有两种实例类型：负载均衡（此前亦被称为“应用型负载均衡”）和传统型负载均衡。 负载均衡：支持 TCP/UDP/HTTP/HTTPS 协议，提供基于域名和 URL 路径的均衡能力，支持灵活转发，有固定IP。 传统型负载均衡：内网不支持 HTTP/HTTPS 协议，配置方法简单，无固定IP。 负载均衡方式 按权重轮询（加权轮询）： 就是分别给每台主机设置不同的权重（也就是优先级），根据权重的多少来分配请求，适合简单场景，支持会话保持（可以让来自同一IP网段的请求被持续转发到同一台后端服务器上，防止用户掉线） 按IP Hash： 根据请求的源地址进行处理，将地址作为Hash的Key，从而请求对应key的主机的处理，同一IP始终请求同一个服务器，适合不支持会话保持的场景 简单来说，就是每台主机有个对应的Key标识，该主机只处理带有该标识的请求，这样就算不用会话保持，用户也不会掉线 加权最小连接数： 与按权重轮询类似，会获取云主机活跃的连接数，除以权值，根据处理后的权值分配请求，适合后端架构复杂的场景。 假设连接数很高，权值也很高，计算出来的权重可能不会很高，就会减少分配处理的请求，如果权值很低，但是连接数也很低，权重可能也会很高，就会增加分配处理的请求。 负载均衡场景双向隐藏： 整个内网的所有用户，（让所有云主机在同一VPC）对外使用同一IP访问，外网的用户想访问内网的主机，也只能通过一个VIP来访问 流量分发： 就是将所有用户视为一个整体，将所有云主机也视为一个整体，通过负载均衡服务的3种方式来进行流量的分发 横向拓展： 负载均衡的横向拓展，能使新增云主机时快速配置后即可将流量分发到新增主机里，无需改动其他云主机重启停机等操作就能实现，当进行缩容去掉云主机的时候也适用，适用于在双十一等临时需要大流量处理时能无痛扩容操作","categories":[],"tags":[]},{"title":"初识Markdown","slug":"0613markdown","date":"2020-08-12T08:18:34.690Z","updated":"2020-06-13T11:11:33.393Z","comments":true,"path":"2020/08/12/0613markdown/","link":"","permalink":"fcl1999062158.github.io/2020/08/12/0613markdown/","excerpt":"这是我的第一篇文章，欢迎大家来捧场，在这里，我会介绍‘Markdown’，一种简单的文本标记语言，它只需要一些简单语法即可实现文本与样式的双重输出，我的博客也全都是用Markdown来编写，包括CSDN，简书，GitHub也都支持这种语法编写，最最重要的是学习成本很低，只要很短的时间即可掌握，程序员写博客必学，如果实在有想不起来的语法，用html标签也能无缝插入其中。本博客评论区也支持使用Markdown格式评论，学完了快去评论试试吧！ 难度指数：☆ 需要提前掌握技术：基本HTML知识（也可以不需要）","text":"这是我的第一篇文章，欢迎大家来捧场，在这里，我会介绍‘Markdown’，一种简单的文本标记语言，它只需要一些简单语法即可实现文本与样式的双重输出，我的博客也全都是用Markdown来编写，包括CSDN，简书，GitHub也都支持这种语法编写，最最重要的是学习成本很低，只要很短的时间即可掌握，程序员写博客必学，如果实在有想不起来的语法，用html标签也能无缝插入其中。本博客评论区也支持使用Markdown格式评论，学完了快去评论试试吧！ 难度指数：☆ 需要提前掌握技术：基本HTML知识（也可以不需要） 0613第一次修改：请各位注意了，由于网站BUG，并不能显示脚注，请各位看到如下字符 ^-或者^=之类的自行想象成脚注来看 1.Markdown编写软件推荐 编写Markdown的软件很多，也有很多好用的，其实只要在CSDN或简书上发表过博客就知道，这两个网站本身默认就是用Markdown编写发表的，而且第一次发表时还提供了完整的教程，在这就推荐一个软件：Typora ，它使用简单，很多功能比较人性化，UI美观，在这里我就不多作介绍了，点击这里就能进入它的官网。 2.字体相关语法介绍 标题字体：要想显示标题字体有两种方法，第一种很简单，就是在文字前面加上[^#]号，需要注意的是，[^#]后面必须要加个空格，语法才能生效，字体前面[^#]越少，标题越大，类似于html中的h1,h2标签 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 显示效果如下: 除了以上用法，还有更简单粗暴的方法，就是在文字下面加 - 和 = 符号，也就是减号和等号，加 = 之后会变成一级标题，加 - 会变成二级标题，可以加一个或无数个，只要你愿意：(但是在我自己的测试中，这种方法并不生效，不知道是什么原因，知道的大佬欢迎在评论区指出) 12345一级标题=======二级标题------- 字体加粗、斜体：很简单易懂，可以选择全部用^*或^_，效果都是一样的，简单总结就是1斜2粗3斜粗(临时想出来的，并不押韵)，值得注意的是，这里的^*后面无需加空格，下面直接演示： 123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 代码块：作为Markdown之所以被程序员作为写博客首选，很重要的原因是因为有一个能显示代码的代码块，该代码块支持显示市面上大部分编程语言，就好像EditPlus这个软件一样，能把代码中关键词高亮，看代码不费力，如果在Markdown中使用代码块就能在不显示markdown样式的情况下直接显示代码，非常方便： 12//java代码块System.out.println(\"Hello World!\"); 12# Python代码块print('Hello World!') 12/*c++代码块*/cout &lt;&lt; \"Hello, World!\"; 12345Markdown语法​ ```java //java代码块 System.out.println(\"Hello World!\");​ 12345- 如果只是文字中一段话想要加上一句代码，可以选择用 [^&#96;&#96;] 来包裹代码，就像这样：“Python中的这个方法用来向控制台输出文字&#96;print(&#39;Hello World!&#39;)&#96;” &#96;&#96;&#96; markdown Python中的这个方法用来向控制台输出文字&#96;print(&#39;Hello World!&#39;)&#96; 当然还有更简单的方法，直接在代码前面加上4个空格或按下一个Tab键，即可 1System.out.println(\"Hello World!\"); 3.段落排版相关 列表：众所周知，HTML中有无序列表和有序列表两种，Markdown也是一样 无序列表，我强烈怀疑Markdown是不是嫌自己太简单的，表示无序列表的方式居然有3种，记住其中一种即可，注意加空格 12345* 第一项+ 第二项- 第三项 第一项 第二项 第三项 有序列表比较符合我们的日常操作习惯 1231. 第一项2. 第二项3. 第三项 第一项 第二项 第三项 如果想使用段落，直接在每一行加Tab键或4个空格即可 123- 第一段 - 第二段 - 第三段 表格：在这里我只放出语法方法，并不推荐使用，因为感觉Markdown的表格表达方式并不是很人性化，这里推荐直接在Typora软件右键&gt;&gt;选择插入&gt;&gt;表格的方式，直接很便捷的就能插入表格了： 姓名 年龄 性别 小明 18 男 老王 20 男 小红 18 女 12345| 姓名 | 年龄 | 性别 || ---- | ---- | ---- || 小明 | 18 | 男 || 老王 | 20 | 男 || 小红 | 18 | 女 | 区块：比较类似于段落，语言不好描述，直接看语法就懂了，值得注意的是，该阶区块下方只能存在同级或以上的区块，不能小于，除非用其他语句隔开。 1234567891011121314* 同学1 &gt;小明 &gt;18 &gt;男 &gt;&gt;语文60 &gt;&gt;&gt;数学98 &gt;&gt;&gt;&gt;英语38* 同学2 &gt;小红 &gt;18 &gt;女 &gt;&gt;语文88 &gt;&gt;&gt;数学78 &gt;&gt;&gt;&gt;英语98 同学1 小明18男 语文60 数学98 英语38 同学2 小红18女 语文88 数学78 英语98 4.特殊字符 超链接，很常用的一个语法，类似html中的a标签，就是这么简单 芒果博客 1[芒果博客](www.pikahub.com) 插入图片，为什么插入图片会放在特殊字符里呢，因为它的语法和超链接实在是太像了，在这里插入一只皮卡丘 1![皮卡丘](https://cdn.jsdelivr.net/gh/fcl1999062158/fcl1999062158.github.io@v1.5.6/img/Pikachu128px.ico) 没错，就是这么简单，只是比超链接前面多了一个感叹号，注意符号一定要用英文的符号哦！中括号里写的是鼠标移上去显示的信息，小括号里的链接可以为绝对路径或相对路径，但是建议直接使用网上图片链接哦，这样文件不管发给谁看都能显示图片，除非链接挂了，之后我会讲如何将本地图片上传到jsdelivr，这样自定义的图片也能有链接啦，而且加载还快. 插入图片其实没有看上去这么简单，小括号链接后面还能加上参数，可以调整图片属性如： 12345678- 后面加上 =30x30设置图片大小（好像不能用）![皮卡丘](https://cdn.jsdelivr.net/gh/fcl1999062158/fcl1999062158.github.io@v1.5.6/img/Pikachu128px.ico =30x30)- 后面加上字符串 \"图片信息\"，在特定的地方会在图片下方显示该图片信息![皮卡丘](https://cdn.jsdelivr.net/gh/fcl1999062158/fcl1999062158.github.io@v1.5.6/img/Pikachu128px.ico \"皮卡丘\")- 如果实在想调整图片大小，可以直接写html标签，宽高甚至可以设置style=\"xxx:xxx\"的CSS样式都能调整，不过据说只有在Typora才能这么玩：&lt;img src=\"https://cdn.jsdelivr.net/gh/fcl1999062158/fcl1999062158.github.io@v1.5.6/img/Pikachu128px.ico\" width=\"200px\" /&gt; 脚注，脚注就是相当于给一个单词或一句话加上注解一样，鼠标移上去就能看见加上的注解信息，脚注分为两部分，1是设置脚注，2是使用脚注 设置脚注，可以设置在页面的任何位置，当然也能在任何位置使用一次或多次： [^恐龙]: 这种恐怖的生物已经灭绝 12- 设置脚注,一般来说，在正常查看的时候是看不见脚注设置的语句的[^恐龙]: 这种恐怖的生物已经灭绝 使用脚注：我今天看了侏罗纪公园，里面有好多[^恐龙] 12- 使用脚注我今天看了侏罗纪公园，里面有好多[^恐龙] 删除线和下划线：这两个比较简单，直接演示 12~~删除线~~&lt;u&gt;下划线&lt;/u&gt; 删除线下划线 5.写在最后：非常感谢各位能看到这里，这是我的第一篇博客，在这个浮躁的年代，我很欣慰我能够沉下心来写完一篇这么长的博客，不管你们信不信，全程我都没有复制过别人的文字。我这个人比较懒，除了笔记，之前从来没有把我学过的知识进行过总结，导致我一直都是半桶水的状态，本次从博客的搭建排版优化编写我都投入的极大的热情，这是真正让我感觉到我是在做自己想要做的事，也感谢你的观看，让我这个半桶水也能为别人解决问题，谢谢你！ 6.下期预告：下期我看情况，准备写《实战搭建一个和我一样的博客》和《Markdown进阶》，想看哪一个可以在文章下方可以对我进行匿名评论，欢迎各位能对我提出宝贵的意见，评论区也能使用Markdown哦，快来试试吧！！","categories":[],"tags":[]},{"title":"Mybatis笔记：动态SQL","slug":"0621ActiveSQL","date":"2020-08-12T08:18:34.690Z","updated":"2020-06-21T16:01:08.456Z","comments":true,"path":"2020/08/12/0621ActiveSQL/","link":"","permalink":"fcl1999062158.github.io/2020/08/12/0621ActiveSQL/","excerpt":"动态SQLMybatis笔记： if标签：用来做条件判断，如果满足就执行标签内sql 123&lt;if test=\"userPassword != null and userPassword != ''\"&gt; and user_password = #&#123;userPassword&#125;&lt;/if&gt;","text":"动态SQLMybatis笔记： if标签：用来做条件判断，如果满足就执行标签内sql 123&lt;if test=\"userPassword != null and userPassword != ''\"&gt; and user_password = #&#123;userPassword&#125;&lt;/if&gt; choose标签：类似java的switch，otherwise类似defult 12345678&lt;choose&gt; &lt;when test=\"author != null and author.name != null\"&gt; AND author_name like #&#123;author.name&#125; &lt;/when&gt; &lt;otherwise&gt; AND featured = 1 &lt;/otherwise&gt;&lt;/choose&gt; trim标签：用于替换标签，如果标签内的if标签生效，才会添加where语句，并且会选择性去除and或or语句,也可用于替换set，prefix代表前缀，suffix代表后缀 1234567891011&lt;trim prefix=\"where\" prefixOverrides=\"and|or\"&gt; &lt;if test=\"state != null\"&gt; state = #&#123;state&#125; &lt;/if&gt; &lt;if test=\"title != null\"&gt; AND title like #&#123;title&#125; &lt;/if&gt; &lt;if test=\"author != null and author.name != null\"&gt; AND author_name like #&#123;author.name&#125; &lt;/if&gt;&lt;/trim&gt; where和set标签：和trim标签一样，只不过不会去除or和and,set标签会自动去除 , 123456789&lt;set&gt; &lt;if test=\"username != null\"&gt;username=#&#123;username&#125;,&lt;/if&gt; &lt;if test=\"password != null\"&gt;password=#&#123;password&#125;,&lt;/if&gt;&lt;/set&gt;&lt;where&gt; &lt;if test=\"state != null\"&gt; state = #&#123;state&#125; &lt;/if&gt;&lt;/where&gt; foreach标签：遍历标签，item:集合，index:索引值，open:遍历出的数据开头的字符，close:结束的字符，collection:相当于是el表达式的items，如果传递的是一个参数，并且这个参数是list时collection只能写list，是array，collection只能写array如果传递的参数是map，collection写的是map的key。separator:每次遍历完成加 , 123456&lt;delete id=\"deleteByForeach\"&gt; delete from student where sno in &lt;foreach collection=\"array\" item=\"stuno\" open=\"(\" close=\")\" separator=\",\"&gt; #&#123;stuno&#125; &lt;/foreach&gt;&lt;/delete&gt; 其他不常用，不做记录…","categories":[],"tags":[]},{"title":"欢迎欢迎","slug":"welcome","date":"2020-08-12T08:18:34.690Z","updated":"2020-06-13T11:00:58.111Z","comments":true,"path":"2020/08/12/welcome/","link":"","permalink":"fcl1999062158.github.io/2020/08/12/welcome/","excerpt":"","text":"这里是个无名小站专门用来分享我的个人博客，本网站正式建立于2020年6月13日，由于网站备案号还没下来，目前是个部署在Github上的静态网站，本站永久域名为mangoblog.top(备案中)和pikahub.com(未备案)，暂时只能通过pikahub.com来进行访问，如果觉得文章写的还不错的话可以分享给有需要的人，欢迎在评论区留言，但请注意文明上网，谢谢配合！如有问题，欢迎加我QQ1574412974一起探讨!!","categories":[],"tags":[]}],"categories":[],"tags":[]}